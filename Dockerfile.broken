# Dockerfile Multi-Servi√ßo para Render.com (Gratuito)
# Este container executa tanto n8n quanto Evolution API
# CONFIGURADO PARA PERSIST√äNCIA DE DADOS com bancos externos
# VERS√ÉO SIMPLIFICADA para evitar erros de build

FROM node:18-alpine

# Instalar depend√™ncias do sistema necess√°rias
RUN apk add --no-cache \
    python3 \
    py3-pip \
    make \
    g++ \
    bash \
    curl \
    git \
    supervisor \
    postgresql-client

# Instalar n8n globalmente primeiro
RUN npm install -g n8n@latest

# Tentar instalar nodes evolution-api (se falhar, continua)
RUN npm install -g n8n-nodes-evolution-api || echo "Evolution API nodes install failed, will try later"

# Criar usu√°rio n√£o-root de forma simples
RUN adduser -D -u 1000 appuser

# Criar diret√≥rios necess√°rios
RUN mkdir -p /app/evolution /var/log/supervisor /home/appuser/.n8n
RUN chown -R appuser:appuser /app /home/appuser

# Baixar e configurar Evolution API
WORKDIR /app/evolution
RUN git clone https://github.com/EvolutionAPI/evolution-api.git . || \
    (echo "Git clone failed, trying alternative..." && \
    curl -L https://github.com/EvolutionAPI/evolution-api/archive/refs/heads/main.zip -o main.zip && \
    unzip main.zip && \
    mv evolution-api-main/* . && \
    rm -rf evolution-api-main main.zip)

# Instalar depend√™ncias da Evolution API
RUN npm install --production || echo "Evolution API npm install failed"

# Tentar build da Evolution API
RUN npm run build || echo "Evolution API build failed, using source"

# Configurar supervisor - vers√£o simplificada
RUN mkdir -p /etc/supervisor/conf.d
RUN echo '[supervisord]' > /etc/supervisor/conf.d/supervisord.conf
RUN echo 'nodaemon=true' >> /etc/supervisor/conf.d/supervisord.conf
RUN echo 'user=root' >> /etc/supervisor/conf.d/supervisord.conf
RUN echo '' >> /etc/supervisor/conf.d/supervisord.conf
RUN echo '[program:n8n]' >> /etc/supervisor/conf.d/supervisord.conf
RUN echo 'command=n8n start' >> /etc/supervisor/conf.d/supervisord.conf
RUN echo 'directory=/home/appuser' >> /etc/supervisor/conf.d/supervisord.conf
RUN echo 'user=appuser' >> /etc/supervisor/conf.d/supervisord.conf
RUN echo 'autostart=true' >> /etc/supervisor/conf.d/supervisord.conf
RUN echo 'autorestart=true' >> /etc/supervisor/conf.d/supervisord.conf
RUN echo 'stdout_logfile=/var/log/supervisor/n8n.log' >> /etc/supervisor/conf.d/supervisord.conf
RUN echo 'stderr_logfile=/var/log/supervisor/n8n.log' >> /etc/supervisor/conf.d/supervisord.conf
RUN echo 'environment=HOME="/home/appuser",USER="appuser"' >> /etc/supervisor/conf.d/supervisord.conf
RUN echo '' >> /etc/supervisor/conf.d/supervisord.conf
RUN echo '[program:evolution-api]' >> /etc/supervisor/conf.d/supervisord.conf
RUN echo 'command=npm start' >> /etc/supervisor/conf.d/supervisord.conf
RUN echo 'directory=/app/evolution' >> /etc/supervisor/conf.d/supervisord.conf
RUN echo 'user=appuser' >> /etc/supervisor/conf.d/supervisord.conf
RUN echo 'autostart=true' >> /etc/supervisor/conf.d/supervisord.conf
RUN echo 'autorestart=true' >> /etc/supervisor/conf.d/supervisord.conf
RUN echo 'stdout_logfile=/var/log/supervisor/evolution.log' >> /etc/supervisor/conf.d/supervisord.conf
RUN echo 'stderr_logfile=/var/log/supervisor/evolution.log' >> /etc/supervisor/conf.d/supervisord.conf

# Configura√ß√µes de ambiente para n8n
ENV N8N_BASIC_AUTH_ACTIVE=true
ENV N8N_COMMUNITY_PACKAGES_ENABLED=true
ENV NODE_ENV=production
# For√ßar uso de banco externo - sem armazenamento local
ENV DB_TYPE=postgresdb
ENV N8N_SKIP_WEBHOOK_DEREGISTRATION_SHUTDOWN=true
ENV N8N_BLOCK_ENV_ACCESS_IN_NODE=false

# Configura√ß√µes de ambiente para Evolution API
ENV SERVER_TYPE=http
ENV SERVER_PORT=8080
ENV CORS_ORIGIN=*
ENV QRCODE_GENERATE=true
ENV WEBSOCKET_ENABLED=true
# For√ßar uso de banco externo - sem armazenamento local
ENV DATABASE_ENABLED=true
ENV DATABASE_PROVIDER=postgresql
ENV CACHE_REDIS_ENABLED=true
ENV CACHE_REDIS_SAVE_INSTANCES=true
ENV CONFIG_SESSION_PHONE_VERSION=2.3000.1023204200

# Expor portas
EXPOSE 5678 8080

# Criar script de inicializa√ß√£o robusto
RUN echo '#!/bin/bash' > /app/start.sh
RUN echo 'set -e' >> /app/start.sh
RUN echo '' >> /app/start.sh
RUN echo '# Verificar vari√°veis obrigat√≥rias' >> /app/start.sh
RUN echo 'if [ -z "$N8N_BASIC_AUTH_PASSWORD" ]; then' >> /app/start.sh
RUN echo '  echo "‚ùå N8N_BASIC_AUTH_PASSWORD n√£o est√° definido!"' >> /app/start.sh
RUN echo '  exit 1' >> /app/start.sh
RUN echo 'fi' >> /app/start.sh
RUN echo '' >> /app/start.sh
RUN echo 'if [ -z "$AUTHENTICATION_API_KEY" ]; then' >> /app/start.sh
RUN echo '  echo "‚ùå AUTHENTICATION_API_KEY n√£o est√° definido!"' >> /app/start.sh
RUN echo '  exit 1' >> /app/start.sh
RUN echo 'fi' >> /app/start.sh
RUN echo '' >> /app/start.sh
RUN echo '# Tentar instalar community packages novamente' >> /app/start.sh
RUN echo 'npm install -g n8n-nodes-evolution-api || echo "Community packages install failed"' >> /app/start.sh
RUN echo '' >> /app/start.sh
RUN echo '# Configurar vari√°veis para persist√™ncia' >> /app/start.sh
RUN echo 'export DB_TYPE=postgresdb' >> /app/start.sh
RUN echo 'export DATABASE_URL=${DATABASE_URL}' >> /app/start.sh
RUN echo 'export AUTHENTICATION_API_KEY=${AUTHENTICATION_API_KEY}' >> /app/start.sh
RUN echo 'export DATABASE_CONNECTION_URI=${DATABASE_URL}' >> /app/start.sh
RUN echo 'export CACHE_REDIS_URI=${REDIS_URL}' >> /app/start.sh
RUN echo 'export EVOLUTION_API_URL="http://localhost:8080"' >> /app/start.sh
RUN echo '' >> /app/start.sh
RUN echo 'echo "üöÄ Iniciando n8n e Evolution API..."' >> /app/start.sh
RUN echo 'echo "üìä N8N ser√° acess√≠vel na porta 5678"' >> /app/start.sh
RUN echo 'echo "üîó Evolution API ser√° acess√≠vel na porta 8080"' >> /app/start.sh
RUN echo 'echo "üóÑÔ∏è  Usando PostgreSQL externo para persist√™ncia"' >> /app/start.sh
RUN echo 'echo "üíæ Dados ser√£o mantidos entre reinicializa√ß√µes"' >> /app/start.sh
RUN echo '' >> /app/start.sh
RUN echo '# Iniciar supervisor' >> /app/start.sh
RUN echo 'exec /usr/bin/supervisord -c /etc/supervisor/conf.d/supervisord.conf' >> /app/start.sh

# Dar permiss√µes e propriedade
RUN chmod +x /app/start.sh
RUN chown appuser:appuser /app/start.sh

# Trocar para usu√°rio n√£o-root
USER appuser
WORKDIR /home/appuser

# Comando de inicializa√ß√£o
CMD ["/app/start.sh"]